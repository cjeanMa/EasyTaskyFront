{"version":3,"sources":["context/auth/authContext.js","context/auth/AuthState.js","modules/general/components/Header.js","routers/AdminRouter.js","modules/general/screens/HomeScreen.js","modules/general/components/CopyrightForm.js","enviroment/Enviroment.js","services/UserService.js","modules/general/components/Login.js","modules/general/screens/LoginScreen.js","modules/general/components/RegisterForm.js","modules/general/screens/RegisterScreen.js","routers/GeneralRouter.js","modules/users/components/AsideUser.js","modules/users/components/HeaderUser.js","services/TaskService.js","modules/users/components/FormTasksUser.js","modules/users/components/ListTaskUser.js","services/EventService.js","modules/users/components/FormEventUser.js","modules/users/components/ListEventUser.js","modules/users/screens/MainUserScreen.js","routers/UserRouter.js","routers/SuperRouter.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","AuthState","props","React","useState","logeado","setLogeado","useEffect","stringSesion","localStorage","getItem","JSON","parse","console","log","iniciarSesionConLocalStorage","Provider","value","iniciarSesionState","objSesion","setItem","stringify","cerrarSesion","removeItem","window","location","pathname","getUserLogued","children","useStyles","makeStyles","theme","menuButton","marginRight","spacing","title","flexGrow","Header","context","useContext","classes","AppBar","position","Toolbar","IconButton","edge","className","color","aria-label","Typography","variant","to","Button","hidden","disabled","onClick","AdminRouter","HomeScreen","class","CopyrightForm","align","Link","href","Date","getFullYear","END_POINT","getLogin","username","password","a","info","fetch","method","headers","body","response","json","data","addUser","dataUser","paper","marginTop","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","primary","main","form","width","submit","Login","setUsername","setPassword","setRespuesta","Container","component","maxWidth","CssBaseline","Avatar","onSubmit","event","preventDefault","then","rpta","success","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","target","type","FormControlLabel","control","Checkbox","Grid","container","item","xs","Box","mt","LoginScreen","centering","marginBottom","RegisterForm","repeatPassword","surname","email","celphone","setDataUser","handleInputRegister","e","border","borderColor","boxShadow","p","confirmAlert","message","buttons","sm","FormControl","InputLabel","htmlFor","Input","aria-describedby","FormHelperText","inputProps","maxLength","fullwidth","RegisterScreen","GeneralRouter","path","root","drawer","flexShrink","drawerPaper","drawerContainer","overflow","content","padding","AsideUser","Drawer","List","ListItem","button","ListItemIcon","ListItemText","Divider","appBar","zIndex","HeaderUser","getTasksByUser","idUser","getCategoryTasks","addTaskByUser","task","updateTaskByUser","idTask","deleteTaskByUser","formControl","minWidth","selectEmpty","FormTasksUser","action","title_task","description_task","taskCategory","id_user","setTask","categoryTasks","setCategoryTasks","prevTask","dataTask","handleInputTask","borderRadius","refreshData","closeForm","gutterBottom","alignContent","Select","native","map","catTas","title_task_category","columns","maxHeight","ListTaskUser","page","setPage","tasksPerPage","setTasksPerPage","taskUpdate","setTaskUpdate","tasks","setTasks","actionTask","setActionTask","hideForm","setHideForm","contador","refreshListTasks","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","style","TableBody","slice","oneTask","hover","role","tabIndex","created_at","TablePagination","rowsPerPageOptions","count","length","rowsPerPage","onChangePage","newPage","onChangeRowsPerPage","getEventsByUser","getCategoryEvents","addEventByUser","updateEventByUser","idEvent","deleteEventByUser","FormEventUser","title_event","description_event","place_event","date_event","eventCategory","setEvent","categoryEvents","setCategoryEvents","prevEvent","dataEvent","justify","catEve","title_event_category","ListEventUser","eventsPerPage","setEventsPerPage","eventUpdate","setEventUpdate","events","setEvents","actionEvent","setActionEvent","refreshListEvents","showUpdateData","onChangeEventPerPage","MainUserScreen","UserRouter","SuperRouter","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f675622.chunk.js","sourcesContent":["import { createContext } from \"react\"\r\n\r\nconst AuthContext = createContext();\r\nexport default AuthContext;","import React from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport AuthContext from \"./authContext\"\r\n\r\nconst AuthState = (props) => {\r\n\r\n    const [logeado, setLogeado] = React.useState(false);\r\n\r\n    const iniciarSesionState = (objSesion) => {\r\n        localStorage.setItem(\"sesion\", JSON.stringify(objSesion));\r\n        setLogeado(true);\r\n    }\r\n\r\n    const cerrarSesion = () => {\r\n        localStorage.removeItem(\"sesion\");\r\n        setLogeado(false);\r\n        window.location.pathname = \"/\";\r\n    }\r\n\r\n    const getUserLogued = () => {\r\n        if (localStorage.getItem(\"sesion\")){\r\n            let user = JSON.parse(localStorage.getItem(\"sesion\"));\r\n            return user;\r\n        }\r\n    }\r\n\r\n    const iniciarSesionConLocalStorage = () => {\r\n        const stringSesion = localStorage.getItem(\"sesion\");\r\n        if (stringSesion) {\r\n            const objSesion = JSON.parse(stringSesion);\r\n            setLogeado(true);\r\n        } else {\r\n            console.log(\"NO HABIA UNA SESIÓN ACTIVA\");\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        iniciarSesionConLocalStorage();\r\n    }, []);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            logeado: logeado,\r\n            iniciarSesionState,\r\n            cerrarSesion,\r\n            getUserLogued\r\n        }}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthState\r\n","import React from 'react';\r\nimport { useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthContext from '../../../context/auth/authContext';\r\nimport { Hidden } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nconst Header = () => {\r\n\r\n    const context = useContext(AuthContext);\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                    <AppsIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h5\" className={classes.title}>\r\n                    <Link to=\"/\">Easy Tasky </Link>\r\n                </Typography>\r\n\r\n                <Button color=\"inherit\"> <Link to=\"/\" >Home</Link> </Button>\r\n                <div hidden={context.logeado}>\r\n                    <Button color=\"inherit\" disabled={context.logeado}> <Link to=\"/register\">Registrate</Link></Button>\r\n                </div>\r\n                <div hidden={context.logeado}>\r\n                    <Button color=\"inherit\"> <Link to=\"/login\">Login</Link></Button>\r\n                </div>\r\n                <div hidden={!context.logeado}>\r\n                    <Button color=\"inherit\"> <Link to=\"/user\">Dashboard</Link></Button>\r\n                </div>\r\n                <div hidden={!context.logeado}>\r\n                    <Button color=\"inherit\" onClick={context.cerrarSesion}> Cerrar Sesion</Button>\r\n                </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nconst AdminRouter = () => {\r\n    return (\r\n        <div>\r\n            Admin Router\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminRouter\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport '../../assets/global.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HomeScreen = () => {\r\n    return (\r\n        <div className={\"base\"}>\r\n\r\n            <h1> Easy Tasky</h1>\r\n            <h2> tareas y Eventos</h2>\r\n\r\n            <h3> Registrate y Descubre nuestra app</h3>\r\n            <h3> </h3>\r\n\r\n            <div className=\"container\">\r\n                <Link to=\"/register\" className={\"btn btn1\"}>\r\n                    <button class=\"btn btn1\"> Registrate </button>\r\n                </Link>\r\n                <Link to=\"/login\" className={\"btn btn1\"}>\r\n                    <button class=\"btn btn1\"> Inicia Sesion </button>\r\n                </Link>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import { Link, Typography } from '@material-ui/core';\r\nimport React from 'react'\r\n\r\nconst CopyrightForm = () => {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n          {'Copyright © '}\r\n          <Link color=\"inherit\" href=\"/\">\r\n            Easy Tasky\r\n          </Link>{' '}\r\n          {new Date().getFullYear()}\r\n          {'.'}\r\n        </Typography>\r\n      );\r\n}\r\n\r\nexport default CopyrightForm\r\n","export const END_POINT = \"http://127.0.0.1:8000/\"\r\n","import {END_POINT} from \"../enviroment/Enviroment\"\r\n\r\nexport const getUsers = async () => {\r\n    const response = await fetch(`${END_POINT}users`);\r\n    const data = await response.json();\r\n    return data;\r\n}\r\n\r\nexport const getLogin = async(username, password) =>{\r\n\r\n    let info = {\r\n        username: username,\r\n        password: password\r\n    };\r\n\r\n    const response = await fetch(\r\n            `${END_POINT}login/`,{\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(info),\r\n            \r\n        })\r\n    const data = await response.json();\r\n    return data;\r\n}\r\n\r\nexport const addUser = async (dataUser) =>{\r\n    const response = await fetch(`${END_POINT}users/`, \r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(dataUser)\r\n        }\r\n    );\r\n    const data = await response.json();\r\n    return data\r\n\r\n}","import React from 'react';\r\nimport {useContext} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport { Link as LinkDom } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport CopyrightForm from './CopyrightForm';\r\nimport { getLogin } from '../../../services/UserService';\r\nimport AuthContext from '../../../context/auth/authContext';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"/\">\r\n        Easy Tasky\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"darkblue\"\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n\r\n  const context = useContext(AuthContext);\r\n\r\n  const [username, setUsername] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [respuesta, setRespuesta] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    \r\n  }, [])\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    getLogin(username, password)\r\n      .then(rpta => {\r\n        if (rpta.success){\r\n          console.log(rpta);\r\n          context.iniciarSesionState(rpta);\r\n          setRespuesta(rpta);\r\n          window.location.pathname = '/user';\r\n        }\r\n        else {\r\n          console.log(\"No funciona\")\r\n        }\r\n      }\r\n      );\r\n  }\r\n\r\n  const handleChangeUsername = (event) => {\r\n    setUsername(event.target.value);\r\n  }\r\n\r\n  const handleChangePassword = (event) => {\r\n    setPassword(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Inicia Sesion\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            value={username}\r\n            onChange={handleChangeUsername}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onChange={handleChangePassword}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            value=\"submit\"\r\n            className={classes.submit}\r\n          >\r\n            Iniciar Sesion\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Olvidaste tu contraseña?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <LinkDom to=\"/register\" variant=\"body2\">\r\n                no tienes una cuenta? Registrate\r\n              </LinkDom>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <CopyrightForm></CopyrightForm>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import React from 'react'\r\nimport \"../../assets/global.css\"\r\nimport Login from '../components/Login'\r\n\r\nconst LoginScreen = () => {\r\n    return (\r\n        <div>\r\n            <Login/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React from 'react'\r\nimport {useEffect} from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Container,\r\n    FormHelperText,\r\n    Grid,\r\n    Input,\r\n    InputLabel,\r\n    makeStyles,\r\n    TextField,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\r\nimport CopyrightForm from './CopyrightForm';\r\nimport { addUser } from '../../../services/UserService';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    centering: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginBottom: 5,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n    }\r\n}));\r\n\r\nconst RegisterForm = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [confPass, setConfPass] = React.useState(false);\r\n    const [repeatPassword, setRepeatPassword] = React.useState(\"\");\r\n    const [dataUser, setDataUser] = React.useState(\r\n        {\r\n            username: \"\",\r\n            name: \"\",\r\n            surname: \"\",\r\n            email: \"\",\r\n            celphone: \"\",\r\n            password: \"\",\r\n        }\r\n    )\r\n\r\n    useEffect(()=>{\r\n        if(dataUser.password!= \"\" || repeatPassword != \"\")\r\n        {\r\n            if(dataUser.username.password == repeatPassword)\r\n                console.log(\"Son iguales\")\r\n            else\r\n                console.log(\"aun noson iguales\")\r\n        }\r\n    },[repeatPassword])\r\n\r\n    const handleSubmitRegister = (e) => {\r\n        e.preventDefault();\r\n        console.log(dataUser);\r\n        addUser(dataUser)\r\n        .then(rpta => {\r\n            confirmAlert({\r\n                title: 'Usuario Creado Satisfactoriamente',\r\n                message: 'Deseas iniciar sesion?',\r\n                buttons: [\r\n                  {\r\n                    label: 'Si',\r\n                    onClick: () => {\r\n                        window.location.pathname = '/login';\r\n                    }\r\n                  },\r\n                  {\r\n                    label: 'No',\r\n                    onClick: () =>{\r\n                        window.location.pathname = '/';\r\n                    }\r\n                  }\r\n                ]\r\n              });\r\n        }) \r\n\r\n    }\r\n\r\n    const handleInputRegister = (e) => {\r\n        const { id, value } = e.target;\r\n        setDataUser({\r\n            ...dataUser,\r\n            [id]: value,\r\n        })\r\n    }\r\n\r\n    const confirmPassword = () =>{\r\n        console.log(dataUser.password, \"//\", repeatPassword);\r\n        if(dataUser.password == repeatPassword){\r\n            console.log(\"ya son iguales\")\r\n        }\r\n    }\r\n\r\n    const handleRepeatPassword = (e) => {\r\n        setRepeatPassword(e.target.value);\r\n        confirmPassword();\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            <Box border={1} borderColor=\"primary.main\" boxShadow={5} p={5} mt={5}>\r\n                <form onSubmit={handleSubmitRegister}>\r\n                    <div className={classes.centering}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <EmojiPeopleIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Registro de nuevo usuario\r\n                    </Typography>\r\n                    </div>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <FormControl fullWidth=\"true\">\r\n                                <InputLabel htmlFor=\"nombres\">Nombres:</InputLabel>\r\n                                <Input id=\"name\" value={dataUser.name} onChange={handleInputRegister} aria-describedby=\"helper-nombre\" />\r\n                                <FormHelperText id=\"helper-nombre\">Ingresa tu nombre completo</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <FormControl fullWidth=\"true\">\r\n                                <InputLabel htmlFor=\"apellidos\">Apellidos:</InputLabel>\r\n                                <Input id=\"surname\" value={dataUser.surname} onChange={handleInputRegister} aria-describedby=\"helper-apellido\" />\r\n                                <FormHelperText id=\"helper-apellido\">De preferencia los dos apellidos</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <FormControl fullWidth=\"true\">\r\n                                <InputLabel htmlFor=\"correo\">Correo Electronico:</InputLabel>\r\n                                <Input id=\"email\" value={dataUser.email} onChange={handleInputRegister} aria-describedby=\"helper-correo\" type=\"email\" />\r\n                                <FormHelperText id=\"helper-correo\">No compartiremos tu correo.</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <FormControl fullWidth=\"true\">\r\n                                <InputLabel htmlFor=\"celular\">Numero de Celular:</InputLabel>\r\n                                <Input id=\"celphone\" inputProps={{ maxLength: 9 }} value={dataUser.celphone} onChange={handleInputRegister} aria-describedby=\"helper-celular\" />\r\n                                <FormHelperText id=\"helper-celular\">Es un dato opcional</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth=\"true\">\r\n                                <InputLabel htmlFor=\"username\">Nombre de Usuario</InputLabel>\r\n                                <Input id=\"username\" value={dataUser.username} onChange={handleInputRegister} aria-describedby=\"helper-username\" />\r\n                                <FormHelperText id=\"helper-username\"></FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth=\"true\">\r\n                                <InputLabel htmlFor=\"password\">Contraseña:</InputLabel>\r\n                                <Input id=\"password\" value={dataUser.password} onChange={handleInputRegister} aria-describedby=\"helper-password\" type=\"password\" />\r\n                                <FormHelperText id=\"helper-password\">Intenta hacer una constraseña segura</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        {/* <Grid item xs={12}>\r\n                            <FormControl fullWidth=\"true\">\r\n                                <InputLabel htmlFor=\"confPassword\">Confirmar Contraseña:</InputLabel>\r\n                                <Input error id=\"confPassword\" value={repeatPassword} onChange={handleRepeatPassword} aria-describedby=\"helper-confPassword\" type=\"password\" />\r\n                                <FormHelperText id=\"helper-confPassword\">Repite tu contraseña</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid> */} \r\n                        <Grid xs={12} fullwidth=\"true\">\r\n                            <div className={classes.centering}>\r\n                                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                                    Registrarme\r\n                        </Button>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <div className={classes.centering}>\r\n                                <CopyrightForm></CopyrightForm>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Box>\r\n        </Container >\r\n\r\n    )\r\n}\r\n\r\nexport default RegisterForm\r\n","import React from 'react'\r\nimport \"../../assets/global.css\"\r\nimport RegisterForm from '../components/RegisterForm'\r\n\r\nconst RegisterScreen = () => {\r\n    return (\r\n        <div>\r\n            <RegisterForm/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router'\r\nimport HomeScreen from '../modules/general/screens/HomeScreen'\r\nimport LoginScreen from '../modules/general/screens/LoginScreen'\r\nimport RegisterScreen from '../modules/general/screens/RegisterScreen'\r\n\r\nconst GeneralRouter = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/login\"><LoginScreen /></Route>\r\n            <Route path=\"/register\"><RegisterScreen /></Route>\r\n            <Route path=\"/\"><HomeScreen /></Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default GeneralRouter\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst AsideUser = () => {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <Toolbar />\r\n                <div className={classes.drawerContainer}>\r\n                    <List>\r\n                        <Link to=\"/user/tasks\">\r\n                            <ListItem button>\r\n                                <ListItemIcon><ListAltIcon /></ListItemIcon>\r\n                                <ListItemText primary={\"Tareas\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/user/events\">\r\n                            <ListItem button>\r\n                                <ListItemIcon><EventNoteIcon /></ListItemIcon>\r\n                                <ListItemText primary={\"Eventos\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                    </List>\r\n                    <Divider />\r\n                </div>\r\n            </Drawer>\r\n\r\n            <Toolbar />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AsideUser\r\n","import React from 'react';\r\nimport { useContext, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from '@material-ui/core';\r\nimport AuthContext from '../../../context/auth/authContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nconst HeaderUser = () => {\r\n\r\n    const context = useContext(AuthContext);\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(()=>{\r\n        if(!context.logeado){\r\n            window.location.pathname = \"/\"\r\n        }\r\n    },[context.logeado])\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n                <Typography variant=\"h5\" className={classes.title}>\r\n                    Easy Tasky - Tasky Manager\r\n                </Typography>\r\n                <div hidden={!context.logeado}>\r\n                    <Button color=\"inherit\" onClick={context.cerrarSesion}> Cerrar Sesion</Button>\r\n                </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default HeaderUser","import { END_POINT } from \"../enviroment/Enviroment\"\r\n\r\n\r\nexport const getTasksByUser = async (idUser) => {\r\n    const response = await fetch(`${END_POINT}user/tasks/${idUser}`);\r\n    const data = response.json();\r\n    return data;\r\n}\r\n\r\nexport const getCategoryTasks = async () => {\r\n    const response = await fetch(`${END_POINT}categoryTasks/`);\r\n    const data = response.json();\r\n    return data;\r\n}\r\n\r\nexport const addTaskByUser = async (task) => {\r\n    const response = await fetch(`${END_POINT}tasks/`,\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(task)\r\n        })\r\n    const data = await response.json();\r\n    return data;\r\n}\r\n\r\nexport const updateTaskByUser = async (task) => {\r\n    let idTask = task.id;\r\n\r\n    const response = await fetch(`${END_POINT}tasks/${idTask}`,\r\n        {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(task)\r\n        },\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n}\r\n\r\nexport const deleteTaskByUser = async (idTask) => {\r\n    const response = await fetch(`${END_POINT}tasks/${idTask}`,\r\n    {\r\n        method: 'DELETE',\r\n    },\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n}","\r\nimport React, { useEffect } from 'react'\r\nimport { Box, Button, Checkbox, FormControl, FormControlLabel, InputLabel, makeStyles, Select, TextField, Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { addTaskByUser, getCategoryTasks, updateTaskByUser } from '../../../services/TaskService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\n\r\nconst FormTasksUser = ({ ...props }) => {\r\n  const classes = useStyles();\r\n\r\n  const [task, setTask] = React.useState({\r\n    action: props.action,\r\n    data: {\r\n      title_task: \"\",\r\n      description_task: \"\",\r\n      taskCategory: \"\",\r\n      id_user: props.idUser\r\n    }\r\n  });\r\n  const [categoryTasks, setCategoryTasks] = React.useState([]);\r\n\r\n  useEffect(() => {\r\n    getCategoryTasks()\r\n      .then(rpta => setCategoryTasks(rpta));\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (props.action == \"update\") {\r\n      console.log(\"dataTask not empty\");\r\n      setTask((prevTask) => ({\r\n        action: props.action,\r\n        data: {\r\n          ...props.dataTask\r\n        }\r\n      }))\r\n    }\r\n    else {\r\n      console.log(\"dataTask empty\");\r\n      setTask(({\r\n        action: props.action,\r\n        data: {\r\n          title_task: \"\",\r\n          description_task: \"\",\r\n          taskCategory: \"\",\r\n          id_user: props.idUser\r\n        }\r\n      })\r\n      )\r\n    }\r\n  }, [props.dataTask, props.action])\r\n\r\n  const handleSubmitTask = (e) => {\r\n    e.preventDefault();\r\n    switch (task.action) {\r\n      case \"create\":\r\n        console.log(\"estas intentando crear un nuevo task\", task)\r\n        addTaskByUser(task.data)\r\n        .then(rpta => props.refreshData());\r\n        props.closeForm();\r\n        \r\n        break;\r\n    \r\n      case \"update\":\r\n        console.log(\"estas intentando updatear un task\", task)\r\n        updateTaskByUser(task.data)\r\n        .then(rpta => props.refreshData());\r\n        props.closeForm();\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  const handleInputTask = (e) => {\r\n    const { id, value } = e.target;\r\n    setTask((prevTask) => ({\r\n      ...prevTask,\r\n      data: {\r\n        ...prevTask.data,\r\n        [id]: value\r\n      }\r\n    }));\r\n  }\r\n\r\n  const closeForm = () => {\r\n    setTask({\r\n      action: props.action,\r\n      data: {\r\n        title_task: \"\",\r\n        description_task: \"\",\r\n        taskCategory: \"\",\r\n        id_user: props.idUser\r\n      }\r\n    })\r\n    props.closeForm();\r\n  }\r\n\r\n  const showData = () => {\r\n    console.log(task)\r\n  }\r\n\r\n  return (\r\n    <Box boxShadow={4} border={1} borderRadius={15} padding={2} marginBottom={2} borderColor=\"lightgray\">\r\n      <form onSubmit={handleSubmitTask}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Formulario de Tarea\r\n              </Typography>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              required\r\n              id=\"title_task\"\r\n              name=\"titulo\"\r\n              label=\"Titulo de Tarea\"\r\n              value={task.data.title_task}\r\n              fullWidth\r\n              required\r\n              onChange={handleInputTask}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              required\r\n              id=\"description_task\"\r\n              name=\"descripcion\"\r\n              label=\"Descripcion corta de Tarea\"\r\n              value={task.data.description_task}\r\n              fullWidth\r\n              required\r\n              onChange={handleInputTask}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} alignContent=\"center\">\r\n            <FormControl variant=\"filled\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"filled-age-native-simple\">Categoria</InputLabel>\r\n              <Select\r\n                native\r\n                id=\"taskCategory\"\r\n                value={task.data.taskCategory}\r\n                onChange={handleInputTask}\r\n                required\r\n              >\r\n\r\n                <option aria-label=\"None\" value=\"\" />\r\n                {categoryTasks.map(catTas => {\r\n                  return (<option value={catTas.id}>{catTas.title_task_category}</option>);\r\n                })}\r\n\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <span disabled={props.action == \"create\" ? false : true} hidden={props.action == \"create\" ? false : true}>\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                Aceptar\r\n              </Button>\r\n            </span>\r\n            <span disabled={props.action == \"update\" ? false : true} hidden={props.action == \"update\" ? false : true}>\r\n              <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\r\n                Actualizar\r\n              </Button>\r\n            </span>\r\n            <Button margin={2} variant=\"contained\" color=\"primary\" onClick={closeForm}>\r\n              Cancelar\r\n          </Button>\r\n            <Button onClick={showData}>\r\n              Show me\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </ Box >\r\n  );\r\n}\r\n\r\nexport default FormTasksUser\r\n","import React, { useEffect, useContext } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport AuthContext from '../../../context/auth/authContext';\r\nimport { getTasksByUser, deleteTaskByUser } from '../../../services/TaskService';\r\nimport { Icon } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport FormTaksUser from './FormTasksUser';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst columns = [\r\n  { label: 'Num', minWidth: 100 },\r\n  { label: 'TAREA', minWidth: 170 },\r\n  {label: 'DESCRIPCION', minWidth: 170,align: 'right'},\r\n  {label: 'FECHA DE CREACION', minWidth: 150,align: 'right'  },\r\n  {label: 'ACCIONES',minWidth: 170,align: \"center\"},\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 600,\r\n  },\r\n});\r\n\r\n\r\nconst ListTaskUser = () => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [tasksPerPage, setTasksPerPage] = React.useState(10);\r\n\r\n  const [idUser, setIdUser] = React.useState([]);\r\n  const [taskUpdate, setTaskUpdate] = React.useState({});\r\n  const [tasks, setTasks] = React.useState([]);\r\n  const [actionTask, setActionTask] = React.useState(\"create\");\r\n  const [hideForm, setHideForm] = React.useState(true);\r\n\r\n  const context = useContext(AuthContext);\r\n\r\n  let contador = 1;\r\n\r\n  //para setear el valor de idUser\r\n  useEffect(() => {\r\n    getTasksByUser(context.getUserLogued().data.id)\r\n      .then(rpta => setTasks(rpta));\r\n  }, [])\r\n\r\n  const refreshListTasks = () => {\r\n    getTasksByUser(context.getUserLogued().data.id)\r\n      .then(rpta => setTasks(rpta));\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeTasksPerPage = (event) => {\r\n    setTasksPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const buttonCreateTask = () => {\r\n    setHideForm(false);\r\n    setActionTask(\"create\");\r\n    setTaskUpdate({});\r\n  }\r\n\r\n  const closeFormTask = () => {\r\n    setHideForm(true);\r\n    setTaskUpdate(null);\r\n  }\r\n\r\n  const showUpdateData = (task) => {\r\n    setHideForm(false);\r\n    setActionTask(\"update\")\r\n    setTaskUpdate(task)\r\n  }\r\n\r\n  const deleteTask = (idTask) => {\r\n    confirmAlert({\r\n      title: 'Eliminar Tarea',\r\n      message: 'Realmente quieres borrar esta tarea?',\r\n      buttons: [\r\n        {\r\n          label: 'Si',\r\n          onClick: () => {\r\n            deleteTaskByUser(idTask)\r\n              .then(rpta => {\r\n                refreshListTasks();\r\n              }\r\n              )\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div hidden={hideForm}>\r\n        <FormTaksUser\r\n          idUser={context.getUserLogued().data.id}\r\n          action={actionTask}\r\n          closeForm={closeFormTask}\r\n          dataTask={taskUpdate}\r\n          refreshData={() => refreshListTasks()}\r\n        />\r\n      </div>\r\n\r\n      <Paper className={classes.root}>\r\n        <Button variant=\"contained\" color=\"primary\" margin={3} onClick={buttonCreateTask}>\r\n          Agregar Tarea\r\n        </Button>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align=\"center\"\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {tasks.slice(page * tasksPerPage, page * tasksPerPage + tasksPerPage).map((oneTask) => {\r\n\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={oneTask.id}>\r\n                    <TableCell align=\"center\">\r\n                      {contador++}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {oneTask.title_task}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {oneTask.description_task}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {oneTask.created_at}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <button border={0} id={oneTask.id} onClick={() => showUpdateData(oneTask)}>\r\n                        <CreateIcon color=\"error\" ></CreateIcon>\r\n                      </button>\r\n                      <button onClick={() => deleteTask(oneTask.id)}>\r\n                        <DeleteOutlineIcon color=\"secondary\"></DeleteOutlineIcon>\r\n                      </button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 50]}\r\n          component=\"div\"\r\n          count={tasks.length}\r\n          rowsPerPage={tasksPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeTasksPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListTaskUser\r\n","import { END_POINT } from \"../enviroment/Enviroment\"\r\n\r\n\r\nexport const getEventsByUser = async (idUser) => {\r\n    const response = await fetch(`${END_POINT}user/events/${idUser}`);\r\n    const data = response.json();\r\n    return data;\r\n}\r\n\r\nexport const getCategoryEvents = async () => {\r\n    const response = await fetch(`${END_POINT}categoryEvents/`);\r\n    const data = response.json();\r\n    return data;\r\n}\r\n\r\nexport const addEventByUser = async (event) => {\r\n    const response = await fetch(`${END_POINT}events/`,\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(event)\r\n        })\r\n    const data = await response.json();\r\n    return data;\r\n}\r\n\r\nexport const updateEventByUser = async (event) => {\r\n    let idEvent = event.id;\r\n\r\n    const response = await fetch(`${END_POINT}events/${idEvent}`,\r\n        {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(event)\r\n        },\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n}\r\n\r\nexport const deleteEventByUser = async (idEvent) => {\r\n    const response = await fetch(`${END_POINT}events/${idEvent}`,\r\n    {\r\n        method: 'DELETE',\r\n    },\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n}\r\n\r\n//export const postEventByUser()","import React, { useEffect } from 'react'\r\nimport { Box, Button, FormControl, InputLabel, makeStyles, Select, TextField, Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { getCategoryEvents, addEventByUser, updateEventByUser } from '../../../services/EventService';\r\nimport { NoteTwoTone } from '@material-ui/icons';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst FormEventUser = ({ ...props }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [event, setEvent] = React.useState({\r\n        action: props.action,\r\n        data: {\r\n            title_event: \"\",\r\n            description_event: \"\",\r\n            place_event: \"\",\r\n            date_event: \"\",\r\n            eventCategory: \"\",\r\n            id_user: props.idUser\r\n        }\r\n    })\r\n\r\n    const [categoryEvents, setCategoryEvents] = React.useState([]);\r\n\r\n    useEffect(() => {\r\n        getCategoryEvents()\r\n            .then(rpta => setCategoryEvents(rpta))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (props.action == \"update\") {\r\n            setEvent((prevEvent) => ({\r\n                action: props.action,\r\n                data: {\r\n                    ...props.dataEvent\r\n                }\r\n            }))\r\n        }\r\n        else {\r\n            setEvent(({\r\n                action: props.action,\r\n                data: {\r\n                    title_event: \"\",\r\n                    description_event: \"\",\r\n                    place_event: \"\",\r\n                    date_event: \"\",\r\n                    eventCategory: \"\",\r\n                    id_user: props.idUser\r\n                }\r\n            })\r\n            )\r\n        }\r\n    }, [props.dataEvent, props.action])\r\n\r\n    const handleSubmitEvent = (e) => {\r\n        e.preventDefault();\r\n        switch (event.action) {\r\n            case \"create\":\r\n                addEventByUser(event.data)\r\n                    .then(rpta => props.refreshData());\r\n                props.closeForm();\r\n\r\n                break;\r\n\r\n            case \"update\":\r\n                updateEventByUser(event.data)\r\n                    .then(rpta => props.refreshData());\r\n                props.closeForm();\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleInputTask = (e) => {\r\n        const { id, value } = e.target;\r\n        setEvent((prevEvent) => ({\r\n            ...prevEvent,\r\n            data: {\r\n                ...prevEvent.data,\r\n                [id]: value\r\n            }\r\n        }));\r\n    }\r\n\r\n    const closeForm = () => {\r\n        setEvent({\r\n            action: props.action,\r\n            data: {\r\n                title_event: \"\",\r\n                description_event: \"\",\r\n                place_event: \"\",\r\n                date_event: \"\",\r\n                eventCategory: \"\",\r\n                id_user: props.idUser\r\n            }\r\n        })\r\n        props.closeForm();\r\n    }\r\n\r\n    const showData = () => {\r\n        console.log(event)\r\n    }\r\n\r\n    return (\r\n        <Box boxShadow={4} border={1} borderRadius={15} padding={2} marginBottom={2} borderColor=\"lightgray\">\r\n            <form onSubmit={handleSubmitEvent}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    Formulario de Evento\r\n                </Typography>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"title_event\"\r\n                            name=\"titulo\"\r\n                            label=\"Nombre del Evento\"\r\n                            value={event.data.title_event}\r\n                            fullWidth\r\n                            required\r\n                            onChange={handleInputTask}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"description_event\"\r\n                            name=\"descripcion\"\r\n                            label=\"Descripcion corta del evento\"\r\n                            value={event.data.description_event}\r\n                            fullWidth\r\n                            required\r\n                            onChange={handleInputTask}\r\n                        />\r\n                    </Grid>\r\n                    <Grid container xs={12} alignContent=\"center\" justify=\"center\">\r\n                        <Grid item xs={4} alignContent=\"center\" justify=\"center\">\r\n                            <FormControl variant=\"filled\" className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"filled-age-native-simple\">Categoria</InputLabel>\r\n                                <Select\r\n                                    native\r\n                                    id=\"eventCategory\"\r\n                                    value={event.data.eventCategory}\r\n                                    onChange={handleInputTask}\r\n                                    required\r\n                                >\r\n\r\n                                    <option aria-label=\"None\" value=\"\" />\r\n                                    {categoryEvents.map(catEve => {\r\n                                        return (<option value={catEve.id}>{catEve.title_event_category}</option>);\r\n                                    })}\r\n\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={4} alignContent=\"center\">\r\n                            <TextField\r\n                                required\r\n                                id=\"place_event\"\r\n                                name=\"descripcion\"\r\n                                label=\"Lugar del evento\"\r\n                                value={event.data.place_event}\r\n                                required\r\n                                onChange={handleInputTask}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4} alignContent=\"center\">\r\n                            <TextField\r\n                                required\r\n                                type=\"date\"\r\n                                id=\"date_event\"\r\n                                name=\"descripcion\"\r\n                                label=\"Fecha del evento\"\r\n                                value={event.data.date_event}\r\n                                required\r\n                                onChange={handleInputTask}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <span disabled={props.action == \"create\" ? false : true} hidden={props.action == \"create\" ? false : true}>\r\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                                Aceptar\r\n                </Button>\r\n                        </span>\r\n                        <span disabled={props.action == \"update\" ? false : true} hidden={props.action == \"update\" ? false : true}>\r\n                            <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\r\n                                Actualizar\r\n                </Button>\r\n                        </span>\r\n                        <Button margin={2} variant=\"contained\" color=\"primary\" onClick={closeForm}>\r\n                            Cancelar\r\n            </Button>\r\n                        <Button onClick={showData}>\r\n                            Show me\r\n            </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </ Box >\r\n    )\r\n}\r\n\r\nexport default FormEventUser\r\n","import React, { useEffect, useContext } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport AuthContext from '../../../context/auth/authContext';\r\nimport { getEventsByUser, deleteEventByUser } from '../../../services/EventService';\r\nimport { Icon } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { red } from '@material-ui/core/colors';\r\nimport FormEventUser from './FormEventUser';\r\n\r\n\r\nconst columns = [\r\n    { label: 'NUM', minWidth: 30 },\r\n    { label: 'EVENTO', minWidth: 100 },\r\n    { label: 'DESCRIPCION', minWidth: 150, },\r\n    { label: 'LUGAR', minWidth: 40, },\r\n    { label: 'FECHA DE EVENTO', minWidth: 40, },\r\n    { label: 'ACCIONES', minWidth: 50, },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: '90%',\r\n    },\r\n});\r\n\r\nconst ListEventUser = () => {\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [eventsPerPage, setEventsPerPage] = React.useState(10);\r\n\r\n    const [eventUpdate, setEventUpdate] = React.useState({});\r\n    const [events, setEvents] = React.useState([]);\r\n    const [actionEvent, setActionEvent] = React.useState(\"create\");\r\n    const [hideForm, setHideForm] = React.useState(true);\r\n\r\n    const context = useContext(AuthContext);\r\n\r\n    let contador = 1;\r\n\r\n    useEffect(() => {\r\n        getEventsByUser(context.getUserLogued().data.id)\r\n            .then(rpta => setEvents(rpta))\r\n        //getTasksByUser(context)\r\n    }, [])\r\n\r\n    const refreshListEvents = () => {\r\n        getEventsByUser(context.getUserLogued().data.id)\r\n            .then(rpta => setEvents(rpta));\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeEventsPerPage = (event) => {\r\n        setEventsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const buttonCreateEvent = () => {\r\n        setHideForm(false);\r\n        setActionEvent(\"create\");\r\n        setEventUpdate({});\r\n    }\r\n\r\n    const closeFormEvent = () => {\r\n        setHideForm(true);\r\n        setEventUpdate(null);\r\n    }\r\n\r\n    const showUpdateData = (event) => {\r\n        setHideForm(false);\r\n        setActionEvent(\"update\")\r\n        setEventUpdate(event)\r\n    }\r\n\r\n    const deleteEvent = (idEvent) => {\r\n        confirmAlert({\r\n            title: 'Eliminar Evento',\r\n            message: 'Realmente quieres borrar este evento?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si',\r\n                    onClick: () => {\r\n                        deleteEventByUser(idEvent)\r\n                            .then(rpta => {\r\n                                refreshListEvents();\r\n                            }\r\n                            )\r\n                    }\r\n                },\r\n                {\r\n                    label: 'No',\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div hidden={hideForm}>\r\n                <FormEventUser\r\n                    idUser={context.getUserLogued().data.id}\r\n                    action={actionEvent}\r\n                    closeForm={closeFormEvent}\r\n                    dataEvent={eventUpdate}\r\n                    refreshData={() => refreshListEvents()}\r\n                />\r\n            </div>\r\n            <Paper className={classes.root}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={buttonCreateEvent}>\r\n                    Agregar Evento\r\n                </Button>\r\n                <TableContainer className={classes.container}>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                        align=\"center\"\r\n                                        style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {events.slice(page * eventsPerPage, page * eventsPerPage + eventsPerPage).map((event) => {\r\n                                return (\r\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={event.id}>\r\n\r\n                                        <TableCell align=\"center\">\r\n                                            {contador++}\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            {event.title_event}\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            {event.description_event}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            {event.place_event}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            {event.date_event}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <button border={0} id={event.id} onClick={() => showUpdateData(event)}>\r\n                                            <CreateIcon color=\"error\"></CreateIcon>\r\n                                            </button>\r\n                                            <button onClick={() => deleteEvent(event.id)}>\r\n                                            <DeleteOutlineIcon color=\"secondary\"></DeleteOutlineIcon>\r\n                                            </button>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={events.length}\r\n                    rowsPerPage={eventsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeEventPerPage={handleChangeEventsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListEventUser\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport AsideUser from '../components/AsideUser';\r\nimport HeaderUser from '../components/HeaderUser';\r\nimport { Route, Switch } from 'react-router';\r\nimport ListTaskUser from '../components/ListTaskUser';\r\nimport ListEventUser from '../components/ListEventUser';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst MainUserScreen = () => {\r\n\r\n    const [user, setUser] = React.useState([]);\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <HeaderUser></HeaderUser>\r\n            <AsideUser></AsideUser>\r\n            <main className={classes.content}>\r\n                <Switch>\r\n                    <Route path=\"/user/tasks\"><ListTaskUser></ListTaskUser></Route>\r\n                    <Route path=\"/user/events\"><ListEventUser></ListEventUser></Route>\r\n                </Switch>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainUserScreen\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router'\r\nimport MainUserScreen from '../modules/users/screens/MainUserScreen'\r\n\r\nconst UserRouter = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/user\"><MainUserScreen></MainUserScreen></Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default UserRouter\r\n","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    UseRouteMatch,\r\n    useParams\r\n} from \"react-router-dom\"\r\nimport Header from '../modules/general/components/Header'\r\nimport AdminRouter from './AdminRouter'\r\nimport GeneralRouter from './GeneralRouter'\r\nimport UserRouter from './UserRouter'\r\n\r\nconst SuperRouter = () => {\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <div>\r\n                    <Header/>\r\n                    <Switch>\r\n                        <Route path=\"/admin\"><AdminRouter/></Route>\r\n                        <Route path=\"/user\"><UserRouter /></Route>\r\n                        <Route path=\"/\"><GeneralRouter /></Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperRouter\r\n","\nimport AuthState from './context/auth/AuthState';\nimport SuperRouter from './routers/SuperRouter';\n\nfunction App() {\n  return (\n    <AuthState>\n      <SuperRouter></SuperRouter>\n    </AuthState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}